#  ███████╗████████╗ █████╗ ██████╗ ███████╗██╗  ██╗██╗██████╗
#  ██╔════╝╚══██╔══╝██╔══██╗██╔══██╗██╔════╝██║  ██║██║██╔══██╗
#  ███████╗   ██║   ███████║██████╔╝███████╗███████║██║██████╔╝
#  ╚════██║   ██║   ██╔══██║██╔══██╗╚════██║██╔══██║██║██╔═══╝
#  ███████║   ██║   ██║  ██║██║  ██║███████║██║  ██║██║██║
#  ╚══════╝   ╚═╝   ╚═╝  ╚═╝╚═╝  ╚═╝╚══════╝╚═╝  ╚═╝╚═╝╚═╝

format = "$directory$character$shell"
right_format = "$git_branch$git_status"

# Disable the blank line at the start of the prompt
add_newline = false

# Second param
[hostname]
ssh_only = true
format = "[](fg:#FAFBFC bg:none)[█](fg:#565869 bg:#FAFBFC)[$ssh_symbol$hostname](bold bg:#565869)[](fg:#565869 bg:none) "
disabled = false

# Third param
[directory]
format = "[  ](fg:#13B1FF bg:none)[$path]($style) "
style = "fg:#565869 bg:none bold"
truncation_length = 3
truncate_to_repo=false
read_only = " "

## SECOND LINE/ROW: Prompt
# Prompt: param 2 └─
[character]
success_symbol = "[](#13B1FF)"
error_symbol = "[](#FF5C56)"
vimcmd_symbol = "[](#35CF68)"

[line_break]
disabled = true

[fill]
symbol = ' '
style = 'bold green'

[cmd_duration]
min_time = 1
format = "[](fg:#FAFBFC bg:none)[$duration]($style)[](fg:#101319 bg:#101319)[](fg:#bb8af7 bg:#101319)[󱑂 ](fg:#101319 bg:#bb8af7)[](fg:#bb8af7 bg:none)"
disabled = false
style = "fg:#565869 bg:#FAFBFC bold"

[git_branch]
format = "[$symbol$branch](fg:#565869 bg:none) "
symbol = " "

[git_status]
format="$all_status$ahead_behind "
style = "fg:#565869 bg:#FAFBFC"
conflicted = "="
ahead =	"[⇡${count}](fg:#35CF68 bg:none)"
behind = "[⇣${count}](fg:#FF5C56 bg:none)"
diverged = "⇡${ahead_count}⇣${behind_count}"
untracked = "[?${count}](fg:#14B1FF bg:none)"
stashed = "*"
modified = "[!${count}](fg:#CF9C00)"
staged = "[+${count}](fg:#35CF68 bg:none)"
renamed = "[~${count}](fg:#14B1FF bg:none)"
deleted = "[-${count}](fg:#FF5C56 bg:none)"

[git_commit]
format = "[\\($hash\\)]($style) [\\($tag\\)]($style)"
style = "green"

[git_state]
rebase = "REBASING"
merge =	"MERGING"
revert = "REVERTING"
cherry_pick = "CHERRY-PICKING"
bisect = "BISECTING"
am = "AM"
am_or_rebase = "AM/REBASE"
style =	"yellow"
format = '\([$state( $progress_current/$progress_total)]($style)\) '

# # SYMBOLS

[aws]
symbol = "  "

[conda]
symbol = " "

[dart]
symbol = " "

# [directory]

[docker_context]
symbol = " "
format = "via [$symbol$context]($style) "
style = "blue bold"
only_with_files = true
detect_files = ["docker-compose.yml", "docker-compose.yaml", "Dockerfile"]
detect_folders = []
disabled = false

[elixir]
symbol = " "

[elm]
symbol = " "

[golang]
symbol = " "

[hg_branch]
symbol = " "

[java]
symbol = " "

[julia]
symbol = " "

[haskell]
symbol = "λ "

[memory_usage]
symbol = " "

[nim]
symbol = " "

[nix_shell]
symbol = " "

[package]
symbol = " "

[perl]
symbol = " "

[php]
symbol = " "

[python]
symbol = " "
#pyenv_version_name = true
format = 'via [${symbol}python (${version} )(\($virtualenv\) )]($style)'
style = "bold yellow"
pyenv_prefix = "venv "
python_binary = ["./venv/bin/python", "python", "python3", "python2"]
detect_extensions = ["py"]
version_format = "v${raw}"

[ruby]
symbol = " "

[rust]
symbol = " "

[scala]
symbol = " "

[shlvl]
symbol = " "

[swift]
symbol = "ﯣ "

[nodejs]
format = "via [ Node.js $version](bold green) "
detect_files = ["package.json", ".node-version"]
detect_folders = ["node_modules"]

# Other languages configurations:
c.disabled = true
cmake.disabled = true
haskell.disabled = true
python.disabled = true
ruby.disabled = true
rust.disabled = true
perl.disabled = true
package.disabled = true
lua.disabled = true
nodejs.disabled = true
java.disabled = true
golang.disabled = true
